{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","onFinish","values","setState","console","log","message","success","props","onSucess","catch","error","finally","name","style","width","margin","this","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","err","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","useEffect","json","restData","restId","menuData","value","onSelect","map","item","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","price","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","render","onCancel","destroyOnClose","initialValues","remember","preserve","React","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.84cd2fb3.chunk.js","sourcesContent":["// login api\r\nexport const login = (credential)=>{\r\n    // credential :{username: value, password:value}\r\n    // request option: method, url, data\r\n    // const{username, password} =credential;\r\n    // use axios instead of fetch\r\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\r\n    return fetch (loginUrl,{\r\n        method:\"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials:\"include\"\r\n    }).then(response => {\r\n        // case 1 login sucess\r\n        // case 2 log in fail\r\n        if(response.status< 200 || response.status >=300){\r\n            throw Error(\"Fail to log in\")\r\n        }\r\n    })\r\n\r\n\r\n\r\n}\r\n// fetch restauant data\r\nexport const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get restaurants\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getMenus = (restId) => {\r\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get menus\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get shopping cart data\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to checkout\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const signup = (data) => {\r\n    const signupUrl = \"/signup\";\r\n\r\n    return fetch(signupUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to sign up\");\r\n        }\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to add menu item to shopping cart\");\r\n        }\r\n    });\r\n};\r\n","import React, {Component} from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {login} from \"../utils\";\r\n\r\nclass LoginForm extends Component {\r\n     state = {\r\n         loading: false,\r\n     }\r\n     onFinish = (values) => {\r\n         // set button loading\r\n         this.setState({loading:true})\r\n        console.log('Received values of form: ', values);\r\n        login(values)\r\n            .then(()=>{\r\n                // log in succesfully\r\n                // inform user\r\n                message.success(\"This is a success message\");\r\n                // inform parent component app logged in\r\n                this.props.onSucess();\r\n\r\n            })\r\n            .catch(()=>{\r\n                // log in failed\r\n                // inform user\r\n                message.error('This is an error message');\r\n            })\r\n            .finally(()=>{\r\n                // do whatever\r\n                // set nutton not loading\r\n                this.setState({loading:false})\r\n            })\r\n    };\r\n    render() {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                style = {\r\n                    {\r\n                        width: 300,\r\n                        margin: \"auto\",\r\n\r\n                    }\r\n                }\r\n\r\n\r\n                onFinish={this.onFinish}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Please input your Username!' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                >\r\n                    <Input.Password\r\n                        prefix={<LockOutlined />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading} >\r\n                        Log in\r\n                    </Button>\r\n\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React,{useState,useEffect} from 'react';\r\nimport { Button, Card, List, message, Select, Tooltip } from \"antd\";\r\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nconst{Option}=Select;\r\n\r\nconst AddToCartButton = ({ itemId }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const AddToCart = () => {\r\n        // set loading = true;\r\n        // add menuitem to server\r\n        // case 1 success :\r\n        // case 2 : failure\r\n        // finally set loading = false;\r\n        setLoading(true);\r\n        addItemToCart(itemId)\r\n            .then(() => message.success(`Successfully add item`))\r\n            .catch((err) => message.error(err.message))\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Tooltip title=\"Add to shopping cart\">\r\n            <Button\r\n                loading={loading}\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n                onClick={AddToCart}\r\n            />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\n\r\nfunction FoodList(props) {\r\n    const [foodData, setFoodData] = useState([]);\r\n    const [curRest, setCurRest] = useState();\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingRest, setLoadingRest] = useState(false);\r\n    // did mount + did update\r\n    useEffect(()=>{\r\n        //step 1 set loading\r\n        // fetch restaurant data from server\r\n        // step 3 case 1 : if succeed set result set restaurant\r\n        //case 2 failed\r\n        // finally set loading to false;\r\n        setLoading(true);\r\n        getRestaurants().then(restData=>{\r\n            setRestaurants(restData);\r\n        })\r\n            .catch( (err) => message.error(err.message)\r\n\r\n            )\r\n            .finally(\r\n                ()=>{\r\n                    setLoading(false);\r\n                }\r\n            )\r\n\r\n\r\n    },[]);\r\n\r\n// did update -> selected restaurant changes\r\nuseEffect(()=>{\r\n    // step1 set loading = true;\r\n    // 2 get menu from server\r\n    // 2.1 success: setState for fooddata\r\n    // 2.2 failure: catch\r\n    // 3 finally set loading = false\r\n    if(!curRest) return;\r\n    setLoading(true)\r\n    getMenus(curRest)\r\n        .then(menuData=>{\r\n        setFoodData(menuData)\r\n    }).catch(\r\n        (err) => message.error(err.message)\r\n    ).\r\n    finally(()=>{\r\n        setLoading(false)\r\n    })\r\n\r\n},[curRest])\r\n\r\n    return (\r\n        <div>\r\n        <Select value={curRest}\r\n                placeholder=\"Select a restaurant\"\r\n                loading={loading}\r\n                style={{ width: 300 }} onSelect={value=> setCurRest(value)}>\r\n\r\n\r\n            {\r\n                restaurants.map(item=>{\r\n                    return <Option key={item.id} value={item.id}>{item.name}</Option>\r\n                })\r\n            }\r\n        </Select>\r\n    {\r\n           curRest &&\r\n           <List\r\n               style={{ marginTop: 20 }}\r\n               grid={{\r\n                   gutter: 16,\r\n                   xs: 1,\r\n                   sm: 2,\r\n                   md: 4,\r\n                   lg: 4,\r\n                   xl: 3,\r\n                   xxl: 3,\r\n               }}\r\n\r\n               dataSource={foodData}\r\n           renderItem={\r\n               item=>(\r\n                   <List.Item>\r\n\r\n                       <Card title={item.name}\r\n                             extra={<AddToCartButton itemId={item.id} />}>\r\n\r\n\r\n                           <img\r\n                               src={item.imageUrl}\r\n                               alt={item.name}\r\n                               style={{ height: \"auto\", width: \"100%\", display: \"block\" }}\r\n                           />\r\n                           {`Price: ${item.price}`}\r\n\r\n\r\n                       </Card>\r\n                   </List.Item>\r\n        )}\r\n           />\r\n    }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FoodList;","import { Button, Drawer, List, message, Typography } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { checkout, getCart } from \"../utils\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst MyCart = () => {\r\n    const [cartVisible, setCartVisible] = useState(false);\r\n    const [cartData, setCartData] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!cartVisible) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        getCart()\r\n            .then((data) => {\r\n                setCartData(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [cartVisible]);\r\n\r\n    const onCheckOut = () => {\r\n        setChecking(true);\r\n        checkout()\r\n            .then(() => {\r\n                message.success(\"Successfully checkout\");\r\n                setCartVisible(false);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setChecking(false);\r\n            });\r\n    };\r\n\r\n    const onCloseDrawer = () => {\r\n        setCartVisible(false);\r\n    };\r\n\r\n    const onOpenDrawer = () => {\r\n        setCartVisible(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\r\n                Cart\r\n            </Button>\r\n            <Drawer\r\n                title=\"My Shopping Cart\"\r\n                onClose={onCloseDrawer}\r\n                visible={cartVisible}\r\n                width={520}\r\n                footer={\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\r\n                        <div>\r\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                onClick={onCheckOut}\r\n                                type=\"primary\"\r\n                                loading={checking}\r\n                                disabled={loading || cartData?.orderItemList.length === 0}\r\n                            >\r\n                                Checkout\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            >\r\n                <List\r\n                    loading={loading}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={cartData?.orderItemList}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                title={item.menuItem.name}\r\n                                description={`$${item.price}`}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyCart;\r\n\r\n","import { Button, Form, Input, message, Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { signup } from \"../utils\";\r\n\r\nclass SignupForm extends React.Component {\r\n    state = {\r\n        displayModal: false,\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        });\r\n    };\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        });\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        signup(data)\r\n            .then(() => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                });\r\n                message.success(`Successfully signed up`);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            }).finally(\r\n            ()=>{\r\n                this.handleCancel();\r\n            }\r\n        );\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\r\n                    Register\r\n                </Button>\r\n                <Modal\r\n                    title=\"Register\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your password!\" },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your first name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"firstname\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your last name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"lastname\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default SignupForm;","import React, {useState} from 'react';\nimport {Layout, Typography} from \"antd\";\nimport './App.css';\nimport LoginForm from \"./components/LoginForm\";\nimport FoodList from \"./components/FoodList\";\nimport MyCart from \"./components/MyCart\";\nimport SignupForm from \"./components/SignupForm\";\n\nconst {Header, Content} = Layout;\nconst {Title} = Typography;\n\nfunction App() {\n    const[authed,setAuthed] = useState(false);\n\n  return (\n    <Layout style={{height : \"100vh\"}}>\n        <Header>\n<div className=\"header\">\n    <Title  level={2}\n            style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n    >Lai Food\n\n\n    </Title>\n    <div>\n        {\n            authed ?\n                <MyCart/>\n                :\n                <SignupForm/>\n        }\n    </div>\n\n</div>\n\n\n        </Header>\n\n      <Content style={{\n          padding:\"50px\",\n          maxHeight:\"calc(100% - 64 px)\",\n          overflowY:\"auto\",\n      }}>\n\n          {\n              authed ?\n                   <FoodList/>  : <LoginForm onSucess={() => setAuthed(true)}\n              />\n          }\n\n      </Content>\n    {/*    this is comment*/}\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}